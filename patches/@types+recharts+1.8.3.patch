diff --git a/node_modules/@types/recharts/index.d.ts b/node_modules/@types/recharts/index.d.ts
index dfb5715..ee6b02d 100644
--- a/node_modules/@types/recharts/index.d.ts
+++ b/node_modules/@types/recharts/index.d.ts
@@ -32,7 +32,7 @@ export type TickFormatterFunction = (value: any) => any;
 export type TickGeneratorFunction = (noTicksProps: object) => ReadonlyArray<any>;
 export type LabelFormatter = (label: string | number) => React.ReactNode;
 export type TooltipFormatter = (value: string | number | Array<string | number>, name: string,
-    entry: TooltipPayload, index: number) => React.ReactNode;
+    entry: TooltipPayload, index: number, money: number) => React.ReactNode;
 export type ItemSorter<T> = (a: T, b: T) => number;
 export type ContentRenderer<P> = (props: P) => React.ReactNode;
 export type DataKey = string | number | ((dataObject: any) => string | number | Readonly<[number, number]> | null);
@@ -506,6 +506,26 @@ export interface PieChartProps extends EventAttributes, CategoricalChartWrapper<
 
 export class PieChart extends React.Component<PieChartProps> { }
 
+export interface FunnelChartProps extends EventAttributes, CategoricalChartWrapper<'centric'> {
+    width?: number;
+    height?: number;
+    
+}
+export class FunnelChart extends React.Component<FunnelChartProps> { }
+
+
+
+export interface FunnelProps extends EventAttributes, Partial<PresentationAttributes>, Animatable { 
+    dataKey?: number | string;
+    data?: ReadonlyArray<object>;
+    isAnimationActive: boolean;
+    nameKey?: string;
+    id?: string;
+}
+export class Funnel extends React.Component<FunnelProps> { }
+
+
+
 export interface PolarAngleAxisTick {
     value: any;
     coordinate: number;
@@ -779,7 +799,7 @@ export interface ScatterProps extends EventAttributes, Partial<PresentationAttri
     shape?: 'circle' | 'cross' | 'diamond' | 'square' | 'star' | 'triangle' | 'wye' | React.ReactElement | ContentRenderer<any>;
     points?: ReadonlyArray<ScatterPoint>;
     hide?: boolean;
-    data?: ReadonlyArray<object>;
+   data ?: ReadonlyArray<object>;
     dataKey?: DataKey;
     name?: string | number;
     id?: string;
@@ -916,12 +936,14 @@ export interface LabelListProps {
     clockWise?: boolean;
     content?: React.ReactElement | ContentRenderer<LabelProps>;
     data?: number;
-    dataKey: string | number | RechartsFunction;
+    dataKey?: string | number ;
     formatter?: LabelFormatter;
     id?: string;
     offset?: number;
     position?: PositionType;
     valueAccessor?: RechartsFunction;
+    fill?: string;
+    stroke?: string;
 }
 
 export type AxisDomain = string | number | ContentRenderer<any> | 'auto' | 'dataMin' | 'dataMax';
